useEffect(() => {
        const fetchData = async () => {
            if (!mapContainer.current) return;

            try {
                const response = await fetch('https://api.ipify.org?format=json');
                const data = await response.json();
                const ip = data.ip;

                let lat: number, lon: number;
                try {
                    const geoResponse = await fetch(`https://ipapi.co/${ip}/json`);
                    const geoData = await geoResponse.json();
                    lat = parseFloat(geoData.latitude);
                    lon = parseFloat(geoData.longitude);
                } catch (error) {
                    console.error('Error fetching geolocation info:', error);
                    lat = 46.2276;
                    lon = 2.2137;
                }

                mapboxgl.accessToken = 'pk.eyJ1Ijoicm9iaW5zaG9vZCIsImEiOiJjbHVsOG1vcTUwaGt1Mmlsd2h3dTM0ZzFvIn0.W-MBSYBmX_D_AqpOUoRAcA';
                if (mapContainer.current) {
                    map.current = new mapboxgl.Map({
                        container: mapContainer.current,
                        style: 'mapbox://styles/mapbox/streets-v12',
                        center: [lon, lat],
                        zoom: 1
                    });

                    if (map.current) {
                        map.current.on('load', () => {
                            if (map.current) {
                                map.current.setFog({
                                    color: 'rgb(186, 210, 235)',
                                    'high-color': 'rgb(36, 92, 223)',
                                    'horizon-blend': 0.002,
                                    'space-color': 'rgba(11,11,25,0)',

                                });
                            }


                            setTimeout(() => {
                                if (map.current) {
                                    map.current.flyTo({
                                        center: [lon, lat],
                                        zoom: 4,
                                        essential: true
                                    });
                                }
                            }, 2000);

                            const coordinates = [
                                [-0.580816, 44.836151],
                                [-75.5, 39],
                                [-76.5, 38],
                                [-0.580816 + 0.3, 44.836151 - 0.3],
                                [-77.5, 37],
                                [-78.5, 36],
                                [-79.5, 35],
                                [-80.5, 34],
                                [-81.5, 33],
                                [-82.5, 32]
                            ];

                            const validCoordinates = coordinates.filter(coordinate => coordinate !== undefined) as Coordinate[];

                            // Create a GeoJSON feature collection
                            const geojson: GeoJSON.FeatureCollection = {
                                type: 'FeatureCollection',
                                features: validCoordinates.map((coordinate, index) => ({
                                    type: 'Feature',
                                    geometry: {
                                        type: 'Point',
                                        coordinates: coordinate
                                    },
                                    properties: {
                                        id: index,
                                        radius: (index + 1) * 10
                                    }
                                }))
                            };

                            if (map.current) {

                                if (!map.current.getSource('points')) {
                                    map.current.addSource('points', {
                                        type: 'geojson',
                                        data: geojson
                                    });
                                }

                                if (!map.current.getLayer('points')) {
                                    map.current.addLayer({
                                        id: 'points',
                                        type: 'circle',
                                        source: 'points',
                                        paint: {
                                            'circle-radius': [
                                                'interpolate',
                                                ['linear'],
                                                ['zoom'],
                                                2, 1,
                                                3, 2,
                                                4, 5,
                                                5, 10,
                                                6, 15,
                                                7, 20,
                                                8, 30,
                                                9, 40,
                                                10, 60,
                                                11, 100,
                                                12, 200,
                                                13, 300,
                                                14, 400,
                                                15, 500,
                                                16, 700,
                                            ],
                                            'circle-color': '#007cbf'
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            } catch (error) {
                console.error('Error fetching IP info:', error);
            }
        }

        fetchData();

        return () => {
            if (map.current) {
                map.current.remove();
            }
        };
    }, []);
